name: Build and Push Docker Image on Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x demo/gradlew

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: Configure Docker to use Google Artifact Registry
        run: gcloud auth configure-docker europe-north1-docker.pkg.dev
      - name: Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Build Docker image using Jib
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: cd demo && ./gradlew jib --image=europe-north1-docker.pkg.dev/straujupite-project/test-app-repo/test-app:$RELEASE_TAG
      
      - name: Create Instance Template
        run: |
          INSTANCE_NAME=str-btx-service-2h68
          RAW_TEMPLATE_NAME=str-btx-template-${{ github.event.release.tag_name }}
          TEMPLATE_NAME=$(echo $RAW_TEMPLATE_NAME | sed 's/\./-/g')
          
          # Define environment variables
          spring_profile=${{env.SPRING_PROFILES_ACTIVE}}
          port=${{env.API_PORT}}
          api_link=${{env.OUTGOING_REQUEST_URL}}
          
          # Create a new instance template without a source instance
          gcloud compute instance-templates create-with-container $TEMPLATE_NAME \
          --project=straujupite-project \
          --machine-type=e2-micro \
          --network-interface=network=default,network-tier=PREMIUM \
          --maintenance-policy=MIGRATE \
          --provisioning-model=STANDARD \
          --service-account=420530097618-compute@developer.gserviceaccount.com \
          --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/trace.append \
          --tags=http-server \
          --container-image=europe-north1-docker.pkg.dev/straujupite-project/straujupite-api/${{ github.event.release.tag_name }} 
          --container-restart-policy=always 
          --container-env=SPRING_PROFILES_ACTIVE=$spring_profile, API_PORT=$port, OUTGOING_REQUEST_URL=$api_link \
          --create-disk=auto-delete=yes, boot=yes, device-name=$TEMPLATE_NAME, image=projects/cos-cloud/global/images/cos-stable-109-17800-218-14,mode=rw,size=10,type=pd-balanced \
          --no-shielded-secure-boot \
          --shielded-vtpm \
          --shielded-integrity-monitoring \
          --labels=container-vm=cos-stable-109-17800-218-14

          # gcloud compute instance-templates create $TEMPLATE_NAME \
            # --region=europe-north1 \
            # --network-interface=network=default,network-tier=PREMIUM,address='' \
            # --metadata=startup-script="#! /bin/bash\nsudo docker run -d --rm -e SPRING_PROFILES_ACTIVE=$spring_profile -e API_PORT=$port -e OUTGOING_REQUEST_URL=$api_link europe-north1-docker.pkg.dev/straujupite-project/test-app-repo/test-app:${{ github.event.release.tag_name }}" 
  
      - name: Update managed instance group
        run: |
          INSTANCE_GROUP=str-btx-service
          gcloud compute instance-groups managed set-instance-template $INSTANCE_GROUP \
            --template=$TEMPLATE_NAME \
            --zone=europe-north1-a