name: Build and Push Docker Image on Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x demo/gradlew

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: Configure Docker to use Google Artifact Registry
        run: gcloud auth configure-docker europe-north1-docker.pkg.dev
      - name: Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Build Docker image using Jib
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: cd demo && ./gradlew jib --image=europe-north1-docker.pkg.dev/straujupite-project/test-app-repo/test-app:$RELEASE_TAG
      
      - name: Create instance template from existing VM
        run: |
          INSTANCE_NAME=str-btx-template-v1
          RAW_TEMPLATE_NAME=str-btx-template-${{ github.event.release.tag_name }}
          TEMPLATE_NAME=$(echo $RAW_TEMPLATE_NAME | sed 's/\./-/g')
          gcloud compute instance-templates create $TEMPLATE_NAME \
            --source-instance=$INSTANCE_NAME \
            --source-instance-zone=europe-north1-a \
            --region=europe-north1 \
            --metadata=startup-script="#! /bin/bash\nsudo docker run -d --rm europe-north1-docker.pkg.dev/straujupite-project/test-app-repo/test-app:${{ github.event.release.tag_name }}"

      - name: Update managed instance group
        run: |
          INSTANCE_GROUP=my-instance-group
          gcloud compute instance-groups managed rolling-action start-update $INSTANCE_GROUP \
            --version=template=$TEMPLATE_NAME \
            --region=europe-north1